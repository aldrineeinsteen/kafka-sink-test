services:

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - kafka-net
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092,EXTERNAL://host.docker.internal:9093"
#      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092,EXTERNAL://0.0.0.0:9093"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - kafka-net
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 5

  cassandra:
    image: cassandra:latest
    ports:
      - "9042:9042"
    environment:
      - CASSANDRA_CLUSTER_NAME=TestCluster
    volumes:
      - cassandra-data:/var/lib/cassandra
    networks:
      - kafka-net
    healthcheck:
      test: ["CMD-SHELL", "cqlsh cassandra -e 'DESCRIBE KEYSPACES;'"]
      interval: 20s
      timeout: 10s
      retries: 5

  kafka-connect:
    image: confluentinc/cp-kafka-connect:latest
    depends_on:
      cassandra:
        condition: service_healthy
      kafka:
        condition: service_healthy
    ports:
      - "8083:8083"
    environment:
      KAFKA_OPTS: "-Dcassandra.contact.points=cassandra"
      CONNECT_BOOTSTRAP_SERVERS: "kafka:9092"
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_GROUP_ID: "kafka-connect-group"
      CONNECT_CONFIG_STORAGE_TOPIC: "connect-configs"
      CONNECT_OFFSET_STORAGE_TOPIC: "connect-offsets"
      CONNECT_STATUS_STORAGE_TOPIC: "connect-status"
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_PLUGIN_PATH: "/usr/share/kafka/plugins"

      # Force single-replica topics (needed for single-node Kafka)
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"

    volumes:
      - ./kafka-plugins:/usr/share/kafka/plugins
    networks:
      - kafka-net

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "kafka:9092"
      SCHEMA_REGISTRY_HOST_NAME: "schema-registry"
#      SCHEMA_REGISTRY_RULE_EXECUTORS: "cel-executor,field-encryption-executor"
#      SCHEMA_REGISTRY_OPTS: "-Dschema.registry.rule.executors=cel-executor,field-encryption-executor -Djava.security.auth.login.config=/etc/schema-registry/schema-registry.jaas"
      SCHEMA_REGISTRY_OPTS: "-Djava.security.auth.login.config=/etc/schema-registry/schema-registry.jaas"
      SCHEMA_REGISTRY_RULE_EXECUTORS: "io.confluent.kafka.schemaregistry.rules.cel.CelExecutor,io.confluent.kafka.schemaregistry.encryption.FieldEncryptionExecutor"


      # Enable TLS/SSL
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081,https://0.0.0.0:8082"
      SCHEMA_REGISTRY_SSL_KEYSTORE_LOCATION: "/etc/schema-registry/keystore.jks"
      SCHEMA_REGISTRY_SSL_KEYSTORE_PASSWORD: "keystore-password"
      SCHEMA_REGISTRY_SSL_KEY_PASSWORD: "keystore-password"
      SCHEMA_REGISTRY_SSL_TRUSTSTORE_LOCATION: "/etc/schema-registry/truststore.jks"
      SCHEMA_REGISTRY_SSL_TRUSTSTORE_PASSWORD: "truststore-password"

      # Enable Authentication over TLS
      SCHEMA_REGISTRY_AUTHENTICATION_METHOD: "BASIC"
      SCHEMA_REGISTRY_AUTHENTICATION_REALM: "SchemaRegistry"
      SCHEMA_REGISTRY_AUTHENTICATION_ROLES: "admin,user"

    ports:
      - "8081:8081"
    volumes:
      - ./keystore.jks:/etc/schema-registry/keystore.jks
      - ./truststore.jks:/etc/schema-registry/truststore.jks
      - ./schema-registry.jaas:/etc/schema-registry/schema-registry.jaas
      - ./users.properties:/etc/schema-registry/users.properties
    networks:
      - kafka-net

networks:
  kafka-net:
    driver: bridge

volumes:
  kafka-data:
  cassandra-data:
